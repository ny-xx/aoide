/*
  	Filename:  .hh
	Author: Kreil Dominik	
	Description:

	Aoide is a simple musicplayer using the file structure
*/

// DO NOT EDIT THIS FILE ! It was created using glade--
// for gtk 2.8.3 and gtkmm 2.8.0
//
// Please modify the corresponding derived classes in ./src/main_window.hh and./src/main_window.cc

#ifndef _MAIN_WINDOW_GLADE_HH
#  define _MAIN_WINDOW_GLADE_HH


#if !defined(GLADEMM_DATA)
#define GLADEMM_DATA 

#include <gtkmm/accelgroup.h>


class GlademmData
{  
        
        Glib::RefPtr<Gtk::AccelGroup> accgrp;
public:
        
        GlademmData(Glib::RefPtr<Gtk::AccelGroup> ag) : accgrp(ag)
        {  
        }
        
        Glib::RefPtr<Gtk::AccelGroup>  getAccelGroup()
        {  return accgrp;
        } 
};
#endif //GLADEMM_DATA

#include <gtkmm/layout.h>
#include <gtkmm/table.h>
#include <gtkmm/box.h>
#include <gtkmm/scale.h>
#include <gtkmm/togglebutton.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/button.h>
#include <gtkmm/window.h>
#include <gtkmm/messagedialog.h>
#include "directorytree.hh"
#include "playlist.hh"
#include "mplayer.hh"

class main_window_glade : public Gtk::Window, MPlayer_Actionhandler
{  
        
        GlademmData *gmm_data;
public:
        class Gtk::Window * main_window;
		virtual void onTrackFinished();
		virtual void onTrackPlays();
protected:
        
        main_window_glade();
        
		void setUpLayout();	
        ~main_window_glade();
private:
        virtual bool quit(GdkEventAny *ev) = 0;

	void appendDirToPlaylist(string path);
	bool validateFileType(string path);
	void savePlaylist(string path);
	void loadPlaylist(string path);

	void onPlay();
	void onNextTrack();
	void onPrevTrack();
	void onStop();
	void onSeek(const ScrollType &type, const double &val);	
	void onSetVol(const ScrollType &type, const double &val);
	void onDeleteTrack();
	void onDeleteAll();
	void onToggleTrackLoop();
	void onToggleListLoop();
	void onAbout();
	bool onTreeDoubleClick(GdkEventButton *event);
	bool onPlaylistDoubleClick(GdkEventButton *event);

	void setButtonToPlay();
	void setButtonToPause();

	MPlayer player;
	string actualTrack;
	int actualTrackNumber;
	string playlistPath;	

	bool loopOverList, loopOverTrack;
	//interface
	Layout main;
	Table mainTable;
	VBox mainPlayer;
	HBox playerButtons;
	HBox playerControl;

	VBox verticalLeft;
	ScrolledWindow verticalLeftScroll;
	DirectoryTree treeview;

	VBox verticalRight;
	ScrolledWindow verticalRightScroll;
	Playlist	playlist;

	Button bPauseResume;
	Button bStop;
	Button nextTrack, prevTrack;
	Button deleteTrack;
	Button deleteAll;
	Button about;
	ToggleButton trackLoop, listLoop;
	HScale vol;
	HScale time;
	
	Image *imPause, *imPlay, 
		  *imNext, *imPrev, *imStop,
		  *imRepTrack, *imRepAll,
		  *imDelTrack, *imDelAll, *imAbout; 
};

#endif
